From 73d11979251b32814a053cc042c3a5e9ccfb4677 Mon Sep 17 00:00:00 2001
From: Chunjie Zhu <chunjie.zhu@xxx.com>
Date: Sun, 20 Dec 2015 02:20:17 -0500
Subject: [PATCH 1/2] add a global system monitor thread

---
 Makefile         |    1 +
 kernel.c         |    4 ++++
 sched.c          |    2 +-
 system-monitor.c |   31 +++++++++++++++++++++++++++++++
 4 files changed, 37 insertions(+), 1 deletions(-)
 create mode 100644 system-monitor.c

diff --git a/Makefile b/Makefile
index daee46c..73dc508 100644
--- a/Makefile
+++ b/Makefile
@@ -83,6 +83,7 @@ src-$(CONFIG_TPMFRONT) += tpmfront.c
 src-$(CONFIG_TPM_TIS) += tpm_tis.c
 src-$(CONFIG_TPMBACK) += tpmback.c
 src-y += daytime.c
+src-y += system-monitor.c
 src-y += events.c
 src-$(CONFIG_FBFRONT) += fbfront.c
 src-y += gntmap.c
diff --git a/kernel.c b/kernel.c
index 437e5b4..3ff74c0 100644
--- a/kernel.c
+++ b/kernel.c
@@ -49,6 +49,8 @@
 
 uint8_t xen_features[XENFEAT_NR_SUBMAPS * 32];
 
+extern void resource_usage_monitor(void *);
+
 void setup_xen_features(void)
 {
     xen_feature_info_t fi;
@@ -147,6 +149,8 @@ void start_kernel(void)
     create_thread("shutdown", shutdown_thread, NULL);
 #endif
 
+    create_thread("monitor", resource_usage_monitor, NULL);
+
     /* Call (possibly overridden) app_main() */
     app_main(&start_info);
 
diff --git a/sched.c b/sched.c
index 1e843d9..2bdb277 100644
--- a/sched.c
+++ b/sched.c
@@ -58,7 +58,7 @@ MINIOS_TAILQ_HEAD(thread_list, struct thread);
 
 struct thread *idle_thread = NULL;
 static struct thread_list exited_threads = MINIOS_TAILQ_HEAD_INITIALIZER(exited_threads);
-static struct thread_list thread_list = MINIOS_TAILQ_HEAD_INITIALIZER(thread_list);
+struct thread_list thread_list = MINIOS_TAILQ_HEAD_INITIALIZER(thread_list);
 static int threads_started;
 
 struct thread *main_thread;
diff --git a/system-monitor.c b/system-monitor.c
new file mode 100644
index 0000000..ccf594f
--- /dev/null
+++ b/system-monitor.c
@@ -0,0 +1,31 @@
+#include <list.h>
+#include <sched.h>
+#include <lib.h>
+#include <console.h>
+
+#define MONITOR_INTERVAL (5 * 1000)
+
+MINIOS_TAILQ_HEAD(thread_list, struct thread);
+extern struct thread_list thread_list;
+
+static void threads_monitor(void);
+
+void resource_usage_monitor(void *unused)
+{
+    do {
+        threads_monitor();
+
+        msleep(MONITOR_INTERVAL);
+    } while(1);
+}
+
+static void threads_monitor()
+{
+    struct thread *thread, *tmp;
+    tprintk("-----> system threads: \n");
+    MINIOS_TAILQ_FOREACH_SAFE(thread, &thread_list, thread_list, tmp)
+    {
+        char *status = is_runnable(thread) ? "Running" : "Sleeping";
+        tprintk("-----> thread %s status %s\n", thread->name, status);
+    }
+}
-- 
1.7.1

